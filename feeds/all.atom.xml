<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>dchess</title><link href="http://dchess.github.io/" rel="alternate"></link><link href="http://dchess.github.io/feeds/all.atom.xml" rel="self"></link><id>http://dchess.github.io/</id><updated>2021-01-13T21:00:00-08:00</updated><subtitle>Software Engineer</subtitle><entry><title>How I Teach Git</title><link href="http://dchess.github.io/how-i-teach-git.html" rel="alternate"></link><published>2021-01-13T21:00:00-08:00</published><updated>2021-01-13T21:00:00-08:00</updated><author><name>dc.hess@gmail.com</name></author><id>tag:dchess.github.io,2021-01-13:/how-i-teach-git.html</id><summary type="html">&lt;p&gt;An overview of how I explain Git to others new to using it for version control&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Teaching Commands Just Encourages Cargo Culting&lt;/h2&gt;
&lt;p&gt;When I first learned to use Git, it supercharged my development and I was quickly sold on its
value, but I had no real understanding of how it worked. I just memorized and/or frequently
Googled the right commands and hoped I never encountered any issue I couldn't solve on my 
own or find a solution for in &lt;a href="https://ohshitgit.com/"&gt;Oh Shit, Git!?!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Even since spending the time to understand it better, I've had a fewer and fewer encounters where a
major malfunction like someone pushing production security keys to a public repo has resulted
in nuking the repo and starting fresh. &lt;strong&gt;Luckily that's only happened on very nascent projects
where that &lt;em&gt;really&lt;/em&gt; was the simplest solution.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;That being said, I wouldn't wish that learning curve on anyone with half a brain and any less
persistence than me. I've been known to call myself the wrecking ball because when all else fails
I keep throwing myself at the wall until it crumbles. I'm stubborn to a fault, but I get things done.&lt;/p&gt;
&lt;h2&gt;How Git Tracks Changes&lt;/h2&gt;
&lt;p&gt;While searching for better ways to teach about the change tracking concepts in Git, I came across &lt;a href="http://pel-daniel.github.io/git-init/"&gt;this
interactive visualization&lt;/a&gt; which I thought was incredibly helpful
for wrapping your head around what's happening when you type in those magical commands.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image Git Change Tracking Visualized" src="/images/git_visualized.png"&gt;&lt;/p&gt;
&lt;h3&gt;Working Tree/Directory&lt;/h3&gt;
&lt;p&gt;This context encapsulates the untracked changes to files in an initialized (&lt;code&gt;git init&lt;/code&gt;) repository.&lt;/p&gt;
&lt;h3&gt;Staging Area&lt;/h3&gt;
&lt;p&gt;This context encapsulated the tracked changes to files and allows you to review atomic changes as well as control the granularity of commits. Files are &lt;strong&gt;added&lt;/strong&gt; here to be tracked. &lt;/p&gt;
&lt;h3&gt;Local Repository&lt;/h3&gt;
&lt;p&gt;This is like a small database in which you can make save points or &lt;strong&gt;commits&lt;/strong&gt; in your file history. It lives in a special hidden folder in the directory (&lt;code&gt;.git/&lt;/code&gt;)&lt;/p&gt;
&lt;h3&gt;Remote Repository&lt;/h3&gt;
&lt;p&gt;This is a centralized version/copy of the git repository that lives on a different computer or hosted service like Github, Gitlab, Bitbucket, or even a self hosted server. Changes are &lt;strong&gt;pushed&lt;/strong&gt; to the remote repository.&lt;/p&gt;
&lt;h2&gt;Git Collaboration with Feature Branch Workflow&lt;/h2&gt;
&lt;p&gt;I generally find the simplest way to collaborate with others in a codebase is the &lt;a href="https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow"&gt;feature branch workflow&lt;/a&gt; approach. Each dev works on a separate
and &lt;em&gt;limited in scope&lt;/em&gt; feature branch, code reviews happen in pull requests, and then code is frequently merged into the &lt;code&gt;main&lt;/code&gt; not &lt;code&gt;master&lt;/code&gt; branch (&lt;a href="https://dev.to/afrodevgirl/replacing-master-with-main-in-github-2fjf"&gt;see here&lt;/a&gt; for a great reason to start using main instead of master).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image Feature Branch Workflow" src="/images/git_workflow.png"&gt;&lt;/p&gt;
&lt;h3&gt;Git Workflow in 10 Steps&lt;/h3&gt;
&lt;p&gt;Ok, so I know I said don't &lt;em&gt;just&lt;/em&gt; memorize commands, but these are the 10 commands to &lt;strong&gt;commit&lt;/strong&gt; (see what I did there?) to memory.&lt;/p&gt;
&lt;h4&gt;1. Clone new repo or pull changes to main branch for existing&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git clone https://github.com/the-repos-url.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git pull origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;2. Checkout a local feature branch to make changes&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git checkout -b my_new_branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;3. Commit after making your code changes (&lt;a href="https://chris.beams.io/posts/git-commit/"&gt;writing good commits&lt;/a&gt;)&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git add -A
$ git commit -m &lt;span class="s2"&gt;&amp;quot;Add some new functionality&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;4. Push changes to a remote feature branch&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git push origin my_new_branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;5. Open a Pull Request (and request reviewers)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Image Github PR button" src="/images/pr_button.png"&gt;&lt;/p&gt;
&lt;h4&gt;6. Code Review: Responding to change requests&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git add -A
$ git commit -m &lt;span class="s2"&gt;&amp;quot;Fix issue raised in code review&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;7. Code Review: Approved&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Image Github PR approval" src="/images/approve_pr.png"&gt;&lt;/p&gt;
&lt;h4&gt;8. Merge (or squash merge) into main branch&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Image Github merge approved changes dialog" src="/images/merge_changes.png"&gt;&lt;/p&gt;
&lt;h4&gt;9. Checkout main (locally)&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git checkout main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;10. Pull changes (back to step 1)&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git pull origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Rinse and repeat for the next feature!&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Common Git Commands and What They Do&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git clone &lt;span class="c1"&gt;# copy remote repos to local&lt;/span&gt;
$ git checkout -b branch_name &lt;span class="c1"&gt;# create and checkout a new branch&lt;/span&gt;
$ git add -A &lt;span class="c1"&gt;# add all changed files to staging&lt;/span&gt;
$ git status &lt;span class="c1"&gt;# view status of the working directory and staging area&lt;/span&gt;
$ git diff &lt;span class="c1"&gt;# view changes made on file(s)&lt;/span&gt;
$ git commit -m “Your message goes here” &lt;span class="c1"&gt;#  save changes to local repo&lt;/span&gt;
$ git pull origin main &lt;span class="c1"&gt;#  get changes to main branch from remote repo&lt;/span&gt;
$ git fetch &lt;span class="c1"&gt;#  get references to all remote branches, so they can be checked out&lt;/span&gt;
$ git push origin branch_name &lt;span class="c1"&gt;#  push local changes to remote repo&lt;/span&gt;
$ git merge main &lt;span class="c1"&gt;#  merge changes to main branch into another branch&lt;/span&gt;
$ git log --oneline &lt;span class="c1"&gt;#  view list of commit messages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;A Few More and When to Use Them&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git stash &lt;span class="c1"&gt;#  temporarily store changes in order to switch contexts&lt;/span&gt;
$ git stash pop &lt;span class="c1"&gt;#  restore temporarily stored changes&lt;/span&gt;
$ git reset &lt;span class="c1"&gt;#  reset tracked file(s) to untracked (can also be used for dangerous reverts)&lt;/span&gt;
$ git revert &lt;span class="c1"&gt;#  safer way to undo changes (fail forward)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Creating Branches (when, why, how)&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Image Checkout Branch Diagram" src="/images/new_branch.png"&gt;&lt;/p&gt;
&lt;h3&gt;When&lt;/h3&gt;
&lt;p&gt;As a rule you should use branches liberally. Anytime you need to make a change or set of changes to the code base, you should create a  “feature” branch to isolate those changes. &lt;/p&gt;
&lt;h3&gt;Why&lt;/h3&gt;
&lt;p&gt;Isolating your changes to a branch prevents conflicts with other collaborators and helps you experiment without fear of making “breaking” changes to the main codebase. Great for experimenting!&lt;/p&gt;
&lt;h3&gt;How&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git branch &lt;span class="c1"&gt;#  list all local branches&lt;/span&gt;
$ git branch new_branch_name &lt;span class="c1"&gt;#  create a new branch&lt;/span&gt;
$ git checkout new_branch_name &lt;span class="c1"&gt;#  switch to that new branch&lt;/span&gt;
$ git checkout -b new_branch_name &lt;span class="c1"&gt;#  create and checkout in one step&lt;/span&gt;
$ git branch -d new_branch_name &lt;span class="c1"&gt;#  delete a branch safely (error if unmerged)&lt;/span&gt;
$ git branch -D new_branch_name &lt;span class="c1"&gt;#  force delete (can delete unmerged)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Pull Requests&lt;/h2&gt;
&lt;p&gt;Pull requests let you tell others about changes you've pushed to a branch in a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before your changes are merged into the base branch&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Code Review&lt;/strong&gt; (Approve, Request Changes, Comment) →  &lt;strong&gt;Merge&lt;/strong&gt; → &lt;strong&gt;Deploy&lt;/strong&gt; &lt;/p&gt;
&lt;h2&gt;Pulling Changes from &lt;code&gt;main&lt;/code&gt; to a Local Branch AKA Merging Locally&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Image Local Merge Diagram" src="/images/merge_local.png"&gt;&lt;/p&gt;
&lt;h3&gt;When&lt;/h3&gt;
&lt;p&gt;A change on main affects your local branch and you need to integrate them into your local changes. This is the same process Github runs when a PR is approved and merged into the main branch.&lt;/p&gt;
&lt;h3&gt;Why&lt;/h3&gt;
&lt;p&gt;Resolving merge conflicts locally before creating PR allows for simpler code review and prevents complications in getting your changes integrated into the main branch. &lt;/p&gt;
&lt;h3&gt;How&lt;/h3&gt;
&lt;p&gt;First commit or stash any changes you are currently working on. Then checkout main and pull changes from the remote repo. Checkout your feature branch again and run &lt;code&gt;git merge main&lt;/code&gt; to begin the merge process. If there are any merge conflicts, resolve them by choosing which segment of code to keep and then make a new commit. &lt;/p&gt;
&lt;h2&gt;Links to Additional Resources&lt;/h2&gt;
&lt;h3&gt;Guides&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/datagrip/2018/06/01/tutorial-how-to-use-git-with-datagrip/"&gt;How to Use Git with DataGrip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://guides.github.com/activities/hello-world/"&gt;Github Hello World Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow"&gt;Git Feature Branch Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chris.beams.io/posts/git-commit/"&gt;How to Write a Git Commit Message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/undoing-changes/git-reset"&gt;Git Reset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/undoing-changes/git-revert"&gt;Git Revert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/git-alias"&gt;Git Alias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/setting-up-a-repository/git-config"&gt;git config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ohshitgit.com/"&gt;Oh Shit, Git!?!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gitguardian.com/secrets-credentials-api-git/"&gt;Why secrets inside git are such a problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/UnseenWizzard/git_training"&gt;Git Training&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Visualizations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pel-daniel.github.io/git-init/"&gt;Git Init Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://veerasundar.com/blog/2018/03/gitflow-animated/"&gt;Gitflow: Animated&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/help/datagrip/github.html"&gt;Github Plugin for DataGrip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/help/datagrip/terminal-emulator.html"&gt;Terminal Plugin for DataGrip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory"&gt;Git History Plugin for VS Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;GitLens Plugin for VS Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category></entry><entry><title>Normalize JSON with Pandas</title><link href="http://dchess.github.io/normalize-json-with-pandas.html" rel="alternate"></link><published>2021-01-12T21:00:00-07:00</published><updated>2021-01-12T21:00:00-07:00</updated><author><name>dc.hess@gmail.com</name></author><id>tag:dchess.github.io,2021-01-12:/normalize-json-with-pandas.html</id><summary type="html">&lt;p&gt;An explanation about using the pandas json_normalize function to handle nested JSON data.&lt;/p&gt;</summary><content type="html">&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;When processing nested &lt;code&gt;JSON&lt;/code&gt; data into a flat structure for importing into a relational database, it can be tricky to structure the data into the right shape. &lt;a href="https://pandas.pydata.org/"&gt;Pandas&lt;/a&gt; has a great tool for doing this called &lt;code&gt;pandas.json_normalize()&lt;/code&gt; but the &lt;a href="https://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html?highlight=json_normalize"&gt;documentation&lt;/a&gt; doesn't make it obvious how to leverage its capabilities for handling nested data structures.&lt;/p&gt;
&lt;p&gt;I thought I could provide a brief example using some randomly generated survey response data (using the &lt;a href="https://faker.readthedocs.io/en/master/"&gt;Faker&lt;/a&gt; library) to illustrate it's advantages.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Setup"&gt;Setup&lt;a class="anchor-link" href="#Setup"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;To start, I'm going to be using pandas and Faker so we'll import those. I'm also going to need to easily display the parsed json as well as the returned dataframes, so I'm importing the json module from the standard lib as well as some IPython notebook helpers for displaying dataframes as HTML tables.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[63]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IPython.display&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HTML&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faker.providers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;internet&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;To make it easier to call the IPython display helper, we'll include this simple function as &lt;strong&gt;syntactic sugar&lt;/strong&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[64]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_html&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Fake-Data"&gt;Fake Data&lt;a class="anchor-link" href="#Fake-Data"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Faker doesn't have a built in provider for survey questions, so let's go ahead and add a simple one that creates non-sensical questions with a simple hack to the sentence provider.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[65]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseProvider&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;stems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Does&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;How does&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Which&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Why does&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;stem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random_choices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elements&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;stems&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="n"&gt;question&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sentence&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;question&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;stem&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;question&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Using this new question provider, we'll construct a few records of fake survey response data with some respondent level data like a respondent_id, survey_date, and respondent email. Within that we'll nest a list of responses which will in turn have it's own dictionary of data at the question level: id, question text, and choices. The choices list will be singular here, but assume it has that structure because the API this comes from has to also account for multi-select options and we'll need to parse it as a list regardless. &lt;em&gt;Depending on our analysis needs, this might also be a place where we'd want to keep these in a comma separated string, but for our purposes here we'll ignore that use case.&lt;/em&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[66]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Faker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_provider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyProvider&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;choices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Strongly Agree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Agree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Neutral&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Disagree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Strongly Disagree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;sample_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;respondent_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bothify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#?##??###?#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;survey_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;question_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bothify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#??#??###?#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;question_text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;choices&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random_choices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elements&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random_digit&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Let's print out a single record to see the resulting data structure that has been generated randomly.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[67]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

    &lt;div class="prompt"&gt;&lt;/div&gt;


&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;{
  &amp;#34;respondent_id&amp;#34;: &amp;#34;9U69hZ538l1&amp;#34;,
  &amp;#34;survey_date&amp;#34;: &amp;#34;1994-03-20&amp;#34;,
  &amp;#34;email&amp;#34;: &amp;#34;lindsey24@example.com&amp;#34;,
  &amp;#34;responses&amp;#34;: [
    {
      &amp;#34;question_id&amp;#34;: &amp;#34;7YB4ZO864I7&amp;#34;,
      &amp;#34;question_text&amp;#34;: &amp;#34;How does speak beat ever tree?&amp;#34;,
      &amp;#34;choices&amp;#34;: [
        {
          &amp;#34;choice&amp;#34;: &amp;#34;Strongly Agree&amp;#34;,
          &amp;#34;number&amp;#34;: 4
        }
      ]
    },
    {
      &amp;#34;question_id&amp;#34;: &amp;#34;8uD0WY155Q9&amp;#34;,
      &amp;#34;question_text&amp;#34;: &amp;#34;How does write popular Mr know develop?&amp;#34;,
      &amp;#34;choices&amp;#34;: [
        {
          &amp;#34;choice&amp;#34;: &amp;#34;Agree&amp;#34;,
          &amp;#34;number&amp;#34;: 9
        }
      ]
    },
    {
      &amp;#34;question_id&amp;#34;: &amp;#34;8bN0OP829A8&amp;#34;,
      &amp;#34;question_text&amp;#34;: &amp;#34;Why does democratic represent far my pressure series third?&amp;#34;,
      &amp;#34;choices&amp;#34;: [
        {
          &amp;#34;choice&amp;#34;: &amp;#34;Strongly Agree&amp;#34;,
          &amp;#34;number&amp;#34;: 9
        }
      ]
    },
    {
      &amp;#34;question_id&amp;#34;: &amp;#34;2Rt9mk140E8&amp;#34;,
      &amp;#34;question_text&amp;#34;: &amp;#34;How does understand network old?&amp;#34;,
      &amp;#34;choices&amp;#34;: [
        {
          &amp;#34;choice&amp;#34;: &amp;#34;Agree&amp;#34;,
          &amp;#34;number&amp;#34;: 2
        }
      ]
    },
    {
      &amp;#34;question_id&amp;#34;: &amp;#34;8tf2SU934m8&amp;#34;,
      &amp;#34;question_text&amp;#34;: &amp;#34;Why does western next put?&amp;#34;,
      &amp;#34;choices&amp;#34;: [
        {
          &amp;#34;choice&amp;#34;: &amp;#34;Neutral&amp;#34;,
          &amp;#34;number&amp;#34;: 8
        }
      ]
    }
  ]
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Reading-with-Pandas"&gt;Reading with Pandas&lt;a class="anchor-link" href="#Reading-with-Pandas"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;As you can see below, simply reading this directly into a dataframe only parses the top level respondent data, but then keeps the responses data as a json array. Which isn't great for simple analysis. Could you load that "as is" into a jsonb field in PostgreSQL? Sure. If you like parsing json with SQL. Yuck!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[68]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

    &lt;div class="prompt"&gt;&lt;/div&gt;



&lt;div class="output_html rendered_html output_subarea "&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;respondent_id&lt;/th&gt;
      &lt;th&gt;survey_date&lt;/th&gt;
      &lt;th&gt;email&lt;/th&gt;
      &lt;th&gt;responses&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;[{'question_id': '7YB4ZO864I7', 'question_text': 'How does speak beat ever tree?', 'choices': [{'choice': 'Strongly Agree', 'number': 4}]}, {'question_id': '8uD0WY155Q9', 'question_text': 'How does write popular Mr know develop?', 'choices': [{'choice': 'Agree', 'number': 9}]}, {'question_id': '8bN0OP829A8', 'question_text': 'Why does democratic represent far my pressure series third?', 'choices': [{'choice': 'Strongly Agree', 'number': 9}]}, {'question_id': '2Rt9mk140E8', 'question_text': 'How does understand network old?', 'choices': [{'choice': 'Agree', 'number': 2}]}, {'question_id': '8tf2SU934m8', 'question_text': 'Why does western next put?', 'choices': [{'choice': 'Neutral', 'number': 8}]}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;[{'question_id': '2CP2AW568v2', 'question_text': 'Why does whatever play office move alone class part wish?', 'choices': [{'choice': 'Neutral', 'number': 0}]}, {'question_id': '2YV7SR528f0', 'question_text': 'Why does which phone return much door?', 'choices': [{'choice': 'Disagree', 'number': 7}]}, {'question_id': '3PJ8eR903v4', 'question_text': 'Why does despite be class various great stay Republican person?', 'choices': [{'choice': 'Neutral', 'number': 4}]}, {'question_id': '2GV2kH553o3', 'question_text': 'Does become create store store?', 'choices': [{'choice': 'Disagree', 'number': 8}]}, {'question_id': '9aX3NJ910f8', 'question_text': 'Which team life although rate science I pattern?', 'choices': [{'choice': 'Strongly Disagree', 'number': 7}]}]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="A-messy-custom-parser"&gt;A messy custom parser&lt;a class="anchor-link" href="#A-messy-custom-parser"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We could attempt to reshape this by writing some custom functions to handle extracting the responses and merging that data with the top-level meta data about the respondent with some dictionary unpacking, but this gets messy and would fall apart quickly as the structure changed. While this approach works, it's not ideal.&lt;/p&gt;
&lt;p&gt;Sure this code could be further refactored to simplify the logic, but it's not worth it since the &lt;code&gt;pandas.json_normalize()&lt;/code&gt; can do this for us easily.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[69]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;record_format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;responses&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;responses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;question_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;question_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;question_text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;question_text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;choices&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;choices&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;records&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;meta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;respondent_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;respondent_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;survey_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;survey_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;responses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;formatted_responses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record_format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;responses&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;formatted_responses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;combined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;combined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;

&lt;span class="n"&gt;clean_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parse_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clean_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

    &lt;div class="prompt"&gt;&lt;/div&gt;



&lt;div class="output_html rendered_html output_subarea "&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;respondent_id&lt;/th&gt;
      &lt;th&gt;survey_date&lt;/th&gt;
      &lt;th&gt;email&lt;/th&gt;
      &lt;th&gt;question_id&lt;/th&gt;
      &lt;th&gt;question_text&lt;/th&gt;
      &lt;th&gt;choice&lt;/th&gt;
      &lt;th&gt;number&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;7YB4ZO864I7&lt;/td&gt;
      &lt;td&gt;How does speak beat ever tree?&lt;/td&gt;
      &lt;td&gt;Strongly Agree&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8uD0WY155Q9&lt;/td&gt;
      &lt;td&gt;How does write popular Mr know develop?&lt;/td&gt;
      &lt;td&gt;Agree&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8bN0OP829A8&lt;/td&gt;
      &lt;td&gt;Why does democratic represent far my pressure series third?&lt;/td&gt;
      &lt;td&gt;Strongly Agree&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;2Rt9mk140E8&lt;/td&gt;
      &lt;td&gt;How does understand network old?&lt;/td&gt;
      &lt;td&gt;Agree&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8tf2SU934m8&lt;/td&gt;
      &lt;td&gt;Why does western next put?&lt;/td&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2CP2AW568v2&lt;/td&gt;
      &lt;td&gt;Why does whatever play office move alone class part wish?&lt;/td&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2YV7SR528f0&lt;/td&gt;
      &lt;td&gt;Why does which phone return much door?&lt;/td&gt;
      &lt;td&gt;Disagree&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;3PJ8eR903v4&lt;/td&gt;
      &lt;td&gt;Why does despite be class various great stay Republican person?&lt;/td&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2GV2kH553o3&lt;/td&gt;
      &lt;td&gt;Does become create store store?&lt;/td&gt;
      &lt;td&gt;Disagree&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;9aX3NJ910f8&lt;/td&gt;
      &lt;td&gt;Which team life although rate science I pattern?&lt;/td&gt;
      &lt;td&gt;Strongly Disagree&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="JSON-Normalize"&gt;JSON Normalize&lt;a class="anchor-link" href="#JSON-Normalize"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Thankfully there is the &lt;code&gt;json_normalize()&lt;/code&gt; function, but it requires a little understanding to get it to satisfactorily parse flat. Simply passing it the sample data without any parameters results in a very familiar result that gets us no further than we started in the first attempt.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[70]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

    &lt;div class="prompt"&gt;&lt;/div&gt;



&lt;div class="output_html rendered_html output_subarea "&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;respondent_id&lt;/th&gt;
      &lt;th&gt;survey_date&lt;/th&gt;
      &lt;th&gt;email&lt;/th&gt;
      &lt;th&gt;responses&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;[{'question_id': '7YB4ZO864I7', 'question_text': 'How does speak beat ever tree?', 'choices': [{'choice': 'Strongly Agree', 'number': 4}]}, {'question_id': '8uD0WY155Q9', 'question_text': 'How does write popular Mr know develop?', 'choices': [{'choice': 'Agree', 'number': 9}]}, {'question_id': '8bN0OP829A8', 'question_text': 'Why does democratic represent far my pressure series third?', 'choices': [{'choice': 'Strongly Agree', 'number': 9}]}, {'question_id': '2Rt9mk140E8', 'question_text': 'How does understand network old?', 'choices': [{'choice': 'Agree', 'number': 2}]}, {'question_id': '8tf2SU934m8', 'question_text': 'Why does western next put?', 'choices': [{'choice': 'Neutral', 'number': 8}]}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;[{'question_id': '2CP2AW568v2', 'question_text': 'Why does whatever play office move alone class part wish?', 'choices': [{'choice': 'Neutral', 'number': 0}]}, {'question_id': '2YV7SR528f0', 'question_text': 'Why does which phone return much door?', 'choices': [{'choice': 'Disagree', 'number': 7}]}, {'question_id': '3PJ8eR903v4', 'question_text': 'Why does despite be class various great stay Republican person?', 'choices': [{'choice': 'Neutral', 'number': 4}]}, {'question_id': '2GV2kH553o3', 'question_text': 'Does become create store store?', 'choices': [{'choice': 'Disagree', 'number': 8}]}, {'question_id': '9aX3NJ910f8', 'question_text': 'Which team life although rate science I pattern?', 'choices': [{'choice': 'Strongly Disagree', 'number': 7}]}]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;A few optional parameters can be used here to parse the first nested array called &lt;code&gt;responses&lt;/code&gt;. We can direct the pandas json parser to a specific key as the source of records. The &lt;code&gt;record_path&lt;/code&gt; parameter takes either a string or list of strings to construct that path. The name of this parameter is a hint about how to think of this when passed as a list as we'll see later.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[71]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;record_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

    &lt;div class="prompt"&gt;&lt;/div&gt;



&lt;div class="output_html rendered_html output_subarea "&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;question_id&lt;/th&gt;
      &lt;th&gt;question_text&lt;/th&gt;
      &lt;th&gt;choices&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;7YB4ZO864I7&lt;/td&gt;
      &lt;td&gt;How does speak beat ever tree?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Strongly Agree', 'number': 4}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;8uD0WY155Q9&lt;/td&gt;
      &lt;td&gt;How does write popular Mr know develop?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Agree', 'number': 9}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;8bN0OP829A8&lt;/td&gt;
      &lt;td&gt;Why does democratic represent far my pressure series third?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Strongly Agree', 'number': 9}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2Rt9mk140E8&lt;/td&gt;
      &lt;td&gt;How does understand network old?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Agree', 'number': 2}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;8tf2SU934m8&lt;/td&gt;
      &lt;td&gt;Why does western next put?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Neutral', 'number': 8}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2CP2AW568v2&lt;/td&gt;
      &lt;td&gt;Why does whatever play office move alone class part wish?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Neutral', 'number': 0}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;2YV7SR528f0&lt;/td&gt;
      &lt;td&gt;Why does which phone return much door?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Disagree', 'number': 7}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;3PJ8eR903v4&lt;/td&gt;
      &lt;td&gt;Why does despite be class various great stay Republican person?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Neutral', 'number': 4}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;2GV2kH553o3&lt;/td&gt;
      &lt;td&gt;Does become create store store?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Disagree', 'number': 8}]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;9aX3NJ910f8&lt;/td&gt;
      &lt;td&gt;Which team life although rate science I pattern?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Strongly Disagree', 'number': 7}]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;But when we direct the parser to just unpack the &lt;code&gt;reponses&lt;/code&gt; array, we lose our data from the level above. Pandas can be instructed to keep this by giving it a list of metadata to repeat for each record it unpacks from the level above. We use the &lt;code&gt;meta&lt;/code&gt; parameter and pass it a list of the fields to include.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[72]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;record_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
     &lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;respondent_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s2"&gt;&amp;quot;survey_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

    &lt;div class="prompt"&gt;&lt;/div&gt;



&lt;div class="output_html rendered_html output_subarea "&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;question_id&lt;/th&gt;
      &lt;th&gt;question_text&lt;/th&gt;
      &lt;th&gt;choices&lt;/th&gt;
      &lt;th&gt;respondent_id&lt;/th&gt;
      &lt;th&gt;survey_date&lt;/th&gt;
      &lt;th&gt;email&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;7YB4ZO864I7&lt;/td&gt;
      &lt;td&gt;How does speak beat ever tree?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Strongly Agree', 'number': 4}]&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;8uD0WY155Q9&lt;/td&gt;
      &lt;td&gt;How does write popular Mr know develop?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Agree', 'number': 9}]&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;8bN0OP829A8&lt;/td&gt;
      &lt;td&gt;Why does democratic represent far my pressure series third?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Strongly Agree', 'number': 9}]&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2Rt9mk140E8&lt;/td&gt;
      &lt;td&gt;How does understand network old?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Agree', 'number': 2}]&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;8tf2SU934m8&lt;/td&gt;
      &lt;td&gt;Why does western next put?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Neutral', 'number': 8}]&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2CP2AW568v2&lt;/td&gt;
      &lt;td&gt;Why does whatever play office move alone class part wish?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Neutral', 'number': 0}]&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;2YV7SR528f0&lt;/td&gt;
      &lt;td&gt;Why does which phone return much door?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Disagree', 'number': 7}]&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;3PJ8eR903v4&lt;/td&gt;
      &lt;td&gt;Why does despite be class various great stay Republican person?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Neutral', 'number': 4}]&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;2GV2kH553o3&lt;/td&gt;
      &lt;td&gt;Does become create store store?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Disagree', 'number': 8}]&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;9aX3NJ910f8&lt;/td&gt;
      &lt;td&gt;Which team life although rate science I pattern?&lt;/td&gt;
      &lt;td&gt;[{'choice': 'Strongly Disagree', 'number': 7}]&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="We-must-go-deeper!"&gt;We must go deeper!&lt;a class="anchor-link" href="#We-must-go-deeper!"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;That works for the most part, but we still have that annoying &lt;strong&gt;choices&lt;/strong&gt; json array that would be nice to split out into columns.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;record_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;choices&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;respondent_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s2"&gt;&amp;quot;survey_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Simply passing the choices field to the &lt;code&gt;record_path&lt;/code&gt; param results in a &lt;code&gt;KeyError&lt;/code&gt; though. This is because the &lt;strong&gt;choices&lt;/strong&gt; field is actually nested in the &lt;strong&gt;responses&lt;/strong&gt; field. So pandas need us to construct a path to reach it. We can get to it by passing each key as a record in the list to construct a path. Here that looks like &lt;code&gt;["responses", "choices"]&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[73]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;record_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;choices&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
    &lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;respondent_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s2"&gt;&amp;quot;survey_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

    &lt;div class="prompt"&gt;&lt;/div&gt;



&lt;div class="output_html rendered_html output_subarea "&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;choice&lt;/th&gt;
      &lt;th&gt;number&lt;/th&gt;
      &lt;th&gt;respondent_id&lt;/th&gt;
      &lt;th&gt;survey_date&lt;/th&gt;
      &lt;th&gt;email&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Strongly Agree&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Agree&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Strongly Agree&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Agree&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Disagree&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Disagree&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Strongly Disagree&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;But when we do that, we lose our &lt;strong&gt;question_id&lt;/strong&gt; and &lt;strong&gt;question_text&lt;/strong&gt; fields. That's because we need to add them in the meta list and pass their paths like the record path param. See below.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[74]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;record_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;choices&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
    &lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;respondent_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s2"&gt;&amp;quot;survey_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;question_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;question_text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

    &lt;div class="prompt"&gt;&lt;/div&gt;



&lt;div class="output_html rendered_html output_subarea "&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;choice&lt;/th&gt;
      &lt;th&gt;number&lt;/th&gt;
      &lt;th&gt;respondent_id&lt;/th&gt;
      &lt;th&gt;survey_date&lt;/th&gt;
      &lt;th&gt;email&lt;/th&gt;
      &lt;th&gt;responses.question_id&lt;/th&gt;
      &lt;th&gt;responses.question_text&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Strongly Agree&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;7YB4ZO864I7&lt;/td&gt;
      &lt;td&gt;How does speak beat ever tree?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Agree&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8uD0WY155Q9&lt;/td&gt;
      &lt;td&gt;How does write popular Mr know develop?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Strongly Agree&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8bN0OP829A8&lt;/td&gt;
      &lt;td&gt;Why does democratic represent far my pressure series third?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Agree&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;2Rt9mk140E8&lt;/td&gt;
      &lt;td&gt;How does understand network old?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8tf2SU934m8&lt;/td&gt;
      &lt;td&gt;Why does western next put?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2CP2AW568v2&lt;/td&gt;
      &lt;td&gt;Why does whatever play office move alone class part wish?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Disagree&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2YV7SR528f0&lt;/td&gt;
      &lt;td&gt;Why does which phone return much door?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;3PJ8eR903v4&lt;/td&gt;
      &lt;td&gt;Why does despite be class various great stay Republican person?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Disagree&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2GV2kH553o3&lt;/td&gt;
      &lt;td&gt;Does become create store store?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Strongly Disagree&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;9aX3NJ910f8&lt;/td&gt;
      &lt;td&gt;Which team life although rate science I pattern?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;One last tweak: some databases (like MS SQL) don't like naming columns with that period in the name. As a work around you can give the &lt;code&gt;json_normalize&lt;/code&gt; function a custom separator such as an underscore instead.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[75]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;sample_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;record_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;choices&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
    &lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;respondent_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s2"&gt;&amp;quot;survey_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;question_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;responses&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;question_text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

    &lt;div class="prompt"&gt;&lt;/div&gt;



&lt;div class="output_html rendered_html output_subarea "&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;choice&lt;/th&gt;
      &lt;th&gt;number&lt;/th&gt;
      &lt;th&gt;respondent_id&lt;/th&gt;
      &lt;th&gt;survey_date&lt;/th&gt;
      &lt;th&gt;email&lt;/th&gt;
      &lt;th&gt;responses_question_id&lt;/th&gt;
      &lt;th&gt;responses_question_text&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Strongly Agree&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;7YB4ZO864I7&lt;/td&gt;
      &lt;td&gt;How does speak beat ever tree?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Agree&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8uD0WY155Q9&lt;/td&gt;
      &lt;td&gt;How does write popular Mr know develop?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Strongly Agree&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8bN0OP829A8&lt;/td&gt;
      &lt;td&gt;Why does democratic represent far my pressure series third?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Agree&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;2Rt9mk140E8&lt;/td&gt;
      &lt;td&gt;How does understand network old?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8tf2SU934m8&lt;/td&gt;
      &lt;td&gt;Why does western next put?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2CP2AW568v2&lt;/td&gt;
      &lt;td&gt;Why does whatever play office move alone class part wish?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Disagree&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2YV7SR528f0&lt;/td&gt;
      &lt;td&gt;Why does which phone return much door?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;3PJ8eR903v4&lt;/td&gt;
      &lt;td&gt;Why does despite be class various great stay Republican person?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Disagree&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2GV2kH553o3&lt;/td&gt;
      &lt;td&gt;Does become create store store?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Strongly Disagree&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;9aX3NJ910f8&lt;/td&gt;
      &lt;td&gt;Which team life although rate science I pattern?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Finally, we'll order the columns from the least nested level on the left all the way to the most nested on the right for easier readability.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[76]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;column_order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;respondent_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;survey_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;responses_question_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;responses_question_text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;column_order&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;print_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;

    &lt;div class="prompt"&gt;&lt;/div&gt;



&lt;div class="output_html rendered_html output_subarea "&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;respondent_id&lt;/th&gt;
      &lt;th&gt;survey_date&lt;/th&gt;
      &lt;th&gt;email&lt;/th&gt;
      &lt;th&gt;responses_question_id&lt;/th&gt;
      &lt;th&gt;responses_question_text&lt;/th&gt;
      &lt;th&gt;choice&lt;/th&gt;
      &lt;th&gt;number&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;7YB4ZO864I7&lt;/td&gt;
      &lt;td&gt;How does speak beat ever tree?&lt;/td&gt;
      &lt;td&gt;Strongly Agree&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8uD0WY155Q9&lt;/td&gt;
      &lt;td&gt;How does write popular Mr know develop?&lt;/td&gt;
      &lt;td&gt;Agree&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8bN0OP829A8&lt;/td&gt;
      &lt;td&gt;Why does democratic represent far my pressure series third?&lt;/td&gt;
      &lt;td&gt;Strongly Agree&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;2Rt9mk140E8&lt;/td&gt;
      &lt;td&gt;How does understand network old?&lt;/td&gt;
      &lt;td&gt;Agree&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;9U69hZ538l1&lt;/td&gt;
      &lt;td&gt;1994-03-20&lt;/td&gt;
      &lt;td&gt;lindsey24@example.com&lt;/td&gt;
      &lt;td&gt;8tf2SU934m8&lt;/td&gt;
      &lt;td&gt;Why does western next put?&lt;/td&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2CP2AW568v2&lt;/td&gt;
      &lt;td&gt;Why does whatever play office move alone class part wish?&lt;/td&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2YV7SR528f0&lt;/td&gt;
      &lt;td&gt;Why does which phone return much door?&lt;/td&gt;
      &lt;td&gt;Disagree&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;3PJ8eR903v4&lt;/td&gt;
      &lt;td&gt;Why does despite be class various great stay Republican person?&lt;/td&gt;
      &lt;td&gt;Neutral&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;2GV2kH553o3&lt;/td&gt;
      &lt;td&gt;Does become create store store?&lt;/td&gt;
      &lt;td&gt;Disagree&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;3A45gW246W1&lt;/td&gt;
      &lt;td&gt;1991-07-13&lt;/td&gt;
      &lt;td&gt;robert21@example.com&lt;/td&gt;
      &lt;td&gt;9aX3NJ910f8&lt;/td&gt;
      &lt;td&gt;Which team life although rate science I pattern?&lt;/td&gt;
      &lt;td&gt;Strongly Disagree&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Parsed-and-ready-to-import"&gt;Parsed and ready to import&lt;a class="anchor-link" href="#Parsed-and-ready-to-import"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;At this point our data is in a simple tabular format and ready to import into a database table with something like &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_sql.html?highlight=to_sql"&gt;pandas.to_sql()&lt;/a&gt; function, but we'll save that for another post.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 


&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = '//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: 'center'," +
        "    displayIndent: '0em'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['$','$'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        " linebreaks: { automatic: true, width: '95% container' }, " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
        "    } " +
        "}); ";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;
</content><category term="Tutorial"></category></entry><entry><title>My Manager README</title><link href="http://dchess.github.io/my-manager-readme.html" rel="alternate"></link><published>2018-08-08T21:00:00-07:00</published><updated>2018-08-08T21:00:00-07:00</updated><author><name>dc.hess@gmail.com</name></author><id>tag:dchess.github.io,2018-08-08:/my-manager-readme.html</id><summary type="html">&lt;p&gt;Sharing my manager readme helped me reflect on who I am as a leader.&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I transitioned from being primarily a software engineer who was an individual
contributor on a team to managing a team of engineers, I didn't have a clear sense
of who I was going to be as a manager. I knew the sort of manager I &lt;em&gt;wanted&lt;/em&gt; to be,
but the shift from peer to leader isn't always clear cut. &lt;/p&gt;
&lt;p&gt;After close to two years in the role, I learned a lot about who I am and who
I still want to be as a leader, but had no clear way to communicate that to my team.&lt;/p&gt;
&lt;p&gt;One of the engineers on our team left the organization after five years in the role,
and while hiring their replacement I took the opportunity to get a fresh start and
reset.&lt;/p&gt;
&lt;p&gt;About six months prior I had come across a few posts about the practice of creating
a &lt;a href="https://medium.com/@kawomersley/why-and-how-to-share-your-manager-readme-plus-heres-mine-8a4fe188ee1b"&gt;manager readme&lt;/a&gt;
as a way to reflect on who you are as a leader as well as provide new hires a sort
of guidebook or operating manual for how to work with you as their manager.&lt;/p&gt;
&lt;p&gt;I wanted to start my new engineer off with not only a clear understanding of how
I saw my role but also what I expected out of them. &lt;/p&gt;
&lt;p&gt;To do this, I looked over &lt;a href="https://hackernoon.com/12-manager-readmes-from-silicon-valleys-top-tech-companies-26588a660afe"&gt;many examples&lt;/a&gt;
of great manager readmes from top tech companies to draw inspiration from.&lt;/p&gt;
&lt;p&gt;Ultimately, I wanted this document to be both explanatory and inspirational for
&lt;em&gt;my team&lt;/em&gt; as well as aspirational for &lt;em&gt;myself&lt;/em&gt;. A sort of contract I could hold myself
to. So that my team could say, "You said you were going to do &lt;em&gt;X&lt;/em&gt;." And
I could make sure I was holding myself up to that same standard.&lt;/p&gt;
&lt;p&gt;So, I drafted a welcome letter and appended my &lt;a href="https://github.com/dchess/manager_readme"&gt;Manager README&lt;/a&gt;
in the true python spirit of:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;explicit is better than implicit&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Being a programmer, I also couldn't help seeing this as yet another program to write.
A set of instructions for myself to operate by. So, of course, I had to check it
into source control and track changes. Like any other codebase, I knew it would
inevitably evolve and grow. And I wanted to be able to git blame myself if it
went off the rails. =)&lt;/p&gt;
&lt;p&gt;Without further ado, here's what I've come up with, so far:&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Manager README&lt;/h1&gt;
&lt;p&gt;In an attempt to be transparent about my leadership philosophy and my expectations (both for myself and my team), I have put together this document. I think &lt;a href="https://www.python.org/dev/peps/pep-0020/"&gt;explicit is better than implicit&lt;/a&gt; and I want this to serve as a way to hold myself accountable as well as to clearly articulate my expectations for my team.&lt;/p&gt;
&lt;h2&gt;My Role&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I strive to be a &lt;a href="https://en.wikipedia.org/wiki/Servant_leadership"&gt;servant leader&lt;/a&gt;: I believe managers work &lt;strong&gt;for&lt;/strong&gt; their teams, not the other way around&lt;/li&gt;
&lt;li&gt;I am an advocate for you and the team with the rest of the organization&lt;/li&gt;
&lt;li&gt;I will set the context for your work, not tell you how to do it&lt;/li&gt;
&lt;li&gt;I want to support your growth and provide you with opportunities to learn and apply your skills&lt;/li&gt;
&lt;li&gt;I am also an individual contributor on this team and hold myself accountable to the same expectations I set for the team&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;My Availability&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;While I usually have a lot on my plate, very little is more important to me than talking to you if you need to talk.&lt;/strong&gt; If you want to talk, let's talk.&lt;/li&gt;
&lt;li&gt;If you have questions, have a roadblock in your work, or just need a thought partner I'd love to hear about it as soon as possible. You don't have to wait until our scheduled one-on-one meetings. Come by my desk, stop me in the hall, catch me on slack, call me, or just put some time on my calendar anywhere that's open.&lt;/li&gt;
&lt;li&gt;If my schedule is blocked when you need me, let me know so I can make sure we find time to connect&lt;/li&gt;
&lt;li&gt;My commute is hell. I tend to work from home frequently and work non-standard hours. My regular schedule is M-W-F in office from 9:30/10-6ish and T-TH at home 8ish-5ish. If you need to schedule something in person, early morning, let me know and I will take extras steps to be there on time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;My Assumptions About You&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;You are agile and adaptable.&lt;/strong&gt; We wear many hats and our roles and work evolve as the organization's needs change. I will expect you to change gears as needed and work on things you may have no prior experience in. Innovation means trying new things and not always knowing how to do it right away.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You are a &lt;a href="https://medium.com/@mmamet/directly-responsible-individuals-f5009f465da4"&gt;directly responsible individual&lt;/a&gt;.&lt;/strong&gt; I expect you to take ownership for your work and your mistakes. I will create a safe space for productive failure as well as give you credit for your successes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You are good at your job.&lt;/strong&gt; I wouldn't have hired you if I thought otherwise. If it feels like I'm questioning you it's because I am trying to gather context or trying to be a sounding board and rubber duck for your ideas. However, you know best how to do your work. I'll ask questions and vet your ideas, but won't override your decisions. I will expect you to own those decisions though.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You feel safe debating with me.&lt;/strong&gt; I believe in productive disagreement. I find that ideas improve by being examined from all angles. If it sounds like I'm disagreeing I'm most likely just playing devil's advocate and want you to articulate and refine your position. This does rely on us being able to have a safe debate. Sometimes the right answer is one neither of us started with.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Values&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;I value your transparency.&lt;/strong&gt; I want you to keep me in the loop and let me know about issues as they arise. Be transparent with me. I will do the same for you.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I value your learning.&lt;/strong&gt; I know that it takes time to learn new things and that novel projects will require additional time to experiment and iterate. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I value your time.&lt;/strong&gt; I don't want you to waste your time on busy work. I want you to provide value and feel valued. I want you to have pride in your work and feel inspired and purposeful in the work you do here. That doesn't mean we won't ever have a slog or work we have to power through. However, if you feel like you are wasting your time on menial work, let's find a way to automate it!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I value your input.&lt;/strong&gt; I put processes in place to make us more effective. I don't believe in just going through the motions or process for the sake of process. If you think something is getting in the way of your work, let me know. I want to improve our processes so they work effectively for all of us.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Focus&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The quality of our development work increases with the amount of concentration we give it. &lt;/li&gt;
&lt;li&gt;Attention is a valuable resource. Be prepared to defend it. &lt;a href="http://calnewport.com/books/deep-work/"&gt;Deep work&lt;/a&gt; is vital to quality.&lt;/li&gt;
&lt;li&gt;We work in an open space. Feel free to use headphones or move to a quiet space if you need to concentrate. I find I do some of my best coding when I'm not at the office.&lt;/li&gt;
&lt;li&gt;You are not paid to maintain your inbox or attend meetings. Block off time on your calendar if you need to. It's okay to say no to an immediate request for your attention or to ask to circle back later. &lt;/li&gt;
&lt;li&gt;Troubleshooting a problem with a teammate, though, is a valuable exercise. There are always things to learn from unplanned collaboration. Be open to help others when they need it and they will return the favor. Just be judicious with how much of your time you dole out for interruptions. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Feedback&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.radicalcandor.com/the-book/"&gt;Radical Candor&lt;/a&gt; makes a lot of sense to me. I want to give you feedback because I care about you and want to help you grow. &lt;/li&gt;
&lt;li&gt;I prefer to offer and receive direct feedback in a timely manner. The tighter the feedback loop, the better. &lt;/li&gt;
&lt;li&gt;I expect people to call BS when they see it and not be afraid to speak up.&lt;/li&gt;
&lt;li&gt;Feedback is best when it is actionable and explicit about what improvement looks like.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Work/Life Balance&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I want you to work smarter, not harder. Don't burn yourself out. There is always more work to do. You don't have to solve everything today.&lt;/li&gt;
&lt;li&gt;I believe in working to live, not living to work. We are mission driven and everyone wants to give 110%, but we have to be mindful of the stress this imbalance can cause.&lt;/li&gt;
&lt;li&gt;Unless there's an emergency, I don't expect to communicate with you outside of business hours. If you get an email from me late at night or first thing in the morning, I don't expect you to respond immediately. That's me working when I need to. Pick it up when you get a chance during your preferred schedule. If I call your cell or text you directly, it's likely urgent. Please respond accordingly. &lt;/li&gt;
&lt;li&gt;Most people work somewhere between 7am (earliest) to 7pm (latest). Figure out what works for you and let me know. I'm flexible about your schedule and know that things come up that may require coming in late or leaving early.&lt;/li&gt;
&lt;li&gt;I support working from home. It's good for mental health, supports deep work and productivity, and is definitely a quality of life issue for me. I also recognize the value of in person meetings, face-to-face collaboration, and informal discussion. We are not full-time remote. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;One on Ones&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I think 1:1s are important and want us to check in regularly. I will strive to prioritize our 1:1s ahead of other commitments and be there on-time and committed to listening. I will give you my full attention.&lt;/li&gt;
&lt;li&gt;These meetings are for you and I expect you to set the agenda. It's not just a time for status updates (although I am happy to chat about your project status). If I have things I want to ask you, I will, but this is your time.&lt;/li&gt;
&lt;li&gt;I think hard discussions are frequently facilitated by taking a walk. That doesn't mean if I ask you to go for a walk that something is wrong though. I like stretching my legs and walking meetings can get the mind moving in different directions. I am also open to taking a meeting over the ping-pong table or grabbing some coffee.&lt;/li&gt;
&lt;li&gt;For remote 1:1s, I have a difficult time focusing and connecting unless I can see your face over video. If you're doing the whole work in your pajamas thing, fine by me. You don't have to dress up.&lt;/li&gt;
&lt;li&gt;I expect to check in at least once per sprint, usually at the mid way point. But the length, frequency, and medium are up to you. I will carve out at least 60 minutes for these but if you need less time or want to run over, let me know. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Relationships&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I think strong teams come from great working relationships. I encourage you to connect with your peers as well as other teammates across Aspire. &lt;/li&gt;
&lt;li&gt;A former Aspire teammate once coined the term &lt;em&gt;frolleague&lt;/em&gt;(friend-colleague) and I find it very fitting. I consider a lot of current and former teammates to be friends. I hang out with folks at Aspire on my personal time and am usually up for happy hour. There is no expectation that anyone here is your new best friend, but I do think that the presence of someone you work with you consider a friend to be a strong indicator of healthy working relationships. &lt;/li&gt;
&lt;li&gt;I'm happy to make introductions for you or provide networking suggestions to help you do that.&lt;/li&gt;
&lt;li&gt;I think it is important to get out to school sites and see the work of the organization in action. I will make efforts to provide you opportunities to do so as soon as possible. &lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category></entry><entry><title>Automating Developer Environment Setup</title><link href="http://dchess.github.io/automating-developer-environment-setup.html" rel="alternate"></link><published>2018-02-18T13:30:00-08:00</published><updated>2018-02-18T13:30:00-08:00</updated><author><name>dc.hess@gmail.com</name></author><id>tag:dchess.github.io,2018-02-18:/automating-developer-environment-setup.html</id><summary type="html">&lt;p&gt;Scripting my setup for development has made my life easier&lt;/p&gt;</summary><content type="html">&lt;p&gt;I develop on Linux. Ubuntu to be specific. Most of the web apps I build I end
up deploying to Heroku. Since their stack is based on Ubuntu and Postgres, I 
try to make my local environment as close to production as possible. &lt;/p&gt;
&lt;p&gt;That means I don't use simpler development databases like SQLite in my local
setup and I don't build on Windows or Mac and then hope my code will deploy
properly in production. I don't want any suprises!&lt;/p&gt;
&lt;p&gt;To that effect, I try to automate my setup as much as possible. &lt;/p&gt;
&lt;p&gt;For work, I develop within a Linux virtual machine (using Virtualbox). At home, 
I'm already using linux as my main os. But I want my setup, tools, and 
configurations to be identical no matter where I am working. I also want to be
able to spin up a new VM at a moment's notice and be ready to go in no time.&lt;/p&gt;
&lt;p&gt;To help facilitate that need, I have a &lt;a href="https://github.com/dchess/dev-env-setup"&gt;github repo&lt;/a&gt;
where I store my dotfiles and a few shell scripts to easily setup my
development environment. &lt;/p&gt;
&lt;p&gt;I prefer to work in the terminal as much as possible and so I use Vim as my
text editor with a few custom configurations to emulate some IDE like features.&lt;/p&gt;
&lt;p&gt;I also prefer to handle version control with git in the terminal and have a few
custom aliases I like to make sure are available wherever I'm working.&lt;/p&gt;
&lt;p&gt;But the most valuable script I have is my database setup script. Installing
Postgres can be daunting, particularly at the start of a new project. I don't
want that to be a hindrance for myself or other developers on my team. While I
have a generic postgres setup script, I also have a more custom one for use in
Django web apps that I store in the source code of each app I deploy. That can
be a huge help when handing off to another developer on the team, so they have
exactly the same database configuration as every other developer working on the
project, with single button deployment.&lt;/p&gt;
&lt;h1&gt;VIM Config&lt;/h1&gt;
&lt;p&gt;My Vim config is pretty simple compared to many I've seen, but there are a few
things I can't live without. I was big on Sublime before I moved to Vim and so
I really appreciate having a fuzzy finder and file tree available. So I use
NERDTree and CtrlP for that. I also like being able to easily comment blocks of
code and use NERDCommenter for that. &lt;/p&gt;
&lt;p&gt;As I've shifted to using Python more, I found &lt;a href="https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/"&gt;this tutorial from Real Python&lt;/a&gt;
really helpful for thinking about how I wanted Vim configured to better support
Python specifically. The main call outs are white space config (both indents and
trailing whitespace), code-completion, and PEP8 compliance. Using static 
analysis tools like Flake8 has greatly cut down on the need for those arguments
during code review.&lt;/p&gt;
&lt;p&gt;Beyond those Vundle plugins, I keep a copy of my current .vimrc file in my repo
for easy syncing. If I make a change locally, I push it to the repo so I can
pull it down in any other environment I'm working in. I also like a certain
color scheme and run a support script during setup to ensure both my terminal
and Vim use the same colors. It cuts down on context switching when I have to 
hop in and out of my editor to run commands.&lt;/p&gt;
&lt;h1&gt;Git Config&lt;/h1&gt;
&lt;p&gt;My git settings mostly consist of setting up my editor to be Vim by default and
a series of helpful aliases. I drew a lot of inspiration from
&lt;a href="https://haacked.com/archive/2014/07/28/github-flow-aliases/"&gt;this article from You've Been Haacked&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I use the quick commit and pretty formatted git log constantly. Likewise the
grep functionality for the commit history is incredibly useful.&lt;/p&gt;
&lt;h1&gt;Bash Config&lt;/h1&gt;
&lt;p&gt;My .bashrc is pretty standard, with one key exception. I really like being
able to see the git branch name in my prompt. I incorporated
&lt;a href="https://coderwall.com/p/fasnya/add-git-branch-name-to-bash-prompt"&gt;this tip from Coderwall&lt;/a&gt;,
which couldn't be any easier. Other than that I mostly have aliases to quickly
jump to current project directories I'm working on. Although lately, I've been
experimenting with some aliases for Django. Typing out &lt;code&gt;python manage.py runserver&lt;/code&gt;
or even &lt;code&gt;./manage.py makemigrations&lt;/code&gt; all the time can be a little tedious. I
know I could use &lt;a href="https://github.com/jgorset/django-shortcuts"&gt;django-shortcuts&lt;/a&gt;
but it really seems like a bash function ought to be able to handle my needs. &lt;/p&gt;
&lt;h1&gt;Postgres Installation&lt;/h1&gt;
&lt;p&gt;When I first was working in Rails and trying to set up PostgreSQL, I had a lot
of hiccups initially. I'd install with the wrong account permissions, or I was
missing some dependency. I'd get it configured, then port to a new system and 
have to spend time trying to get it all back to working order. It was a serious
headache.&lt;/p&gt;
&lt;p&gt;Then, I found this great resource for installing Ruby on Rails on Ubuntu from 
&lt;a href="https://gorails.com/setup/ubuntu/16.04"&gt;Go Rails&lt;/a&gt; which had a small aside
about Postgres. I was inspired by the simplicity of their directions and
&lt;a href="https://github.com/dchess/dev-env-setup/blob/master/rails.sh"&gt;translated it into a shell script&lt;/a&gt;
to automate it. &lt;/p&gt;
&lt;p&gt;While I have since largely put Rails behind me (I still have a few legacy apps
that I maintain), I am absolutely indebted to the advice about databse setup.&lt;/p&gt;
&lt;p&gt;Just to show how simple this is, here is my postgre setup script. It's 7 lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;whoami&lt;span class="k"&gt;)&lt;/span&gt;

sudo sh -c &lt;span class="s2"&gt;&amp;quot;echo &amp;#39;deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main&amp;#39; &amp;gt; /etc/apt/sources.list.d/pgdg.list&amp;quot;&lt;/span&gt;
wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc &lt;span class="p"&gt;|&lt;/span&gt; sudo apt-key add -
sudo apt-get update
sudo apt-get install -y postgresql-common
sudo apt-get install -y postgresql libpq-dev

sudo -u postgres createuser &lt;span class="nv"&gt;$user&lt;/span&gt; -s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It does all the heavy lifting. Figures out what account I am installing with,
gets the necessary repository info, installs postgres, and even sets up a user
based on my account to access it with. &lt;/p&gt;
&lt;p&gt;I've taken this idea a little further for Django and now run something a
little more complicated. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c1"&gt;# Exit if command fails&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; -e
&lt;span class="c1"&gt;# Treat unset variables as errors&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; -u

&lt;span class="c1"&gt;# Set user as current account&lt;/span&gt;
&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;whoami&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Install Postgres 10&lt;/span&gt;
sudo sh -c &lt;span class="s2"&gt;&amp;quot;echo &amp;#39;deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main&amp;#39; &amp;gt;&amp;gt; /etc/apt/sources.list.d/pgdg.list&amp;quot;&lt;/span&gt;
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc &lt;span class="p"&gt;|&lt;/span&gt; sudo apt-key add -
sudo apt-get update
sudo apt-get install -y postgresql-common
sudo apt-get install -y postgresql-10 postgresql-contrib libpq-dev

&lt;span class="c1"&gt;# Create superuser account as self for local management&lt;/span&gt;
sudo -u postgres createuser &lt;span class="nv"&gt;$user&lt;/span&gt; -s

&lt;span class="c1"&gt;# Set env vars for colors&lt;/span&gt;
&lt;span class="nv"&gt;YELLOW&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\033[1;33m&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;NC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\033[0m&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Collect arguments from user&lt;/span&gt;
&lt;span class="c1"&gt;# Project specific values&lt;/span&gt;
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;YELLOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;Database name:\n&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;NC&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;read&lt;/span&gt; database
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;YELLOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;Username:\n&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;NC&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;read&lt;/span&gt; username
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;YELLOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;Password:\n&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;NC&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;read&lt;/span&gt; password

&lt;span class="c1"&gt;# Create database and user&lt;/span&gt;
&lt;span class="nv"&gt;RUN_ON_PSQL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;psql -X -U &lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="s2"&gt; --set ON_ERROR_STOP=on --set AUTOCOMMIT=off postgres&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$RUN_ON_PSQL&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt;SQL&lt;/span&gt;
&lt;span class="s"&gt;CREATE DATABASE $database;&lt;/span&gt;
&lt;span class="s"&gt;CREATE USER $username WITH PASSWORD &amp;#39;$password&amp;#39;;&lt;/span&gt;
&lt;span class="s"&gt;ALTER ROLE $username SET client_encoding TO &amp;#39;utf8&amp;#39;;&lt;/span&gt;
&lt;span class="s"&gt;ALTER ROLE $username SET default_transaction_isolation TO &amp;#39;read committed&amp;#39;;&lt;/span&gt;
&lt;span class="s"&gt;ALTER ROLE $username SET timezone TO &amp;#39;UTC&amp;#39;;&lt;/span&gt;
&lt;span class="s"&gt;GRANT ALL PRIVILEGES ON DATABASE $database TO $username; &lt;/span&gt;
&lt;span class="s"&gt;ALTER USER $username CREATEDB;&lt;/span&gt;
&lt;span class="s"&gt;commit;&lt;/span&gt;
&lt;span class="s"&gt;SQL&lt;/span&gt;

&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now my team can clone my repo, run this app and be good to go in seconds. It
could not be any easier to hand off my code!&lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;There are always ways to automate your workflow. I am constantly on the look
out for ways I can take the guess work out of my development configuration.&lt;/p&gt;
&lt;p&gt;There are other things I rely on that I haven't mentioned here in detail (but 
you can find them in my &lt;a href="https://github.com/dchess/dev-env-setup"&gt;repo&lt;/a&gt;) like
installing &lt;a href="https://devcenter.heroku.com/articles/heroku-cli"&gt;Heroku CLI&lt;/a&gt; or 
&lt;a href="https://ngrok.com/"&gt;ngrok&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;I keep adding more automation to my setup as I go. In fact, I'm pretty sure 
that's my most active public repo!&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Resolutions for the New Year</title><link href="http://dchess.github.io/resolutions-for-the-new-year.html" rel="alternate"></link><published>2018-01-21T15:00:00-08:00</published><updated>2018-01-21T15:00:00-08:00</updated><author><name>dc.hess@gmail.com</name></author><id>tag:dchess.github.io,2018-01-21:/resolutions-for-the-new-year.html</id><summary type="html">&lt;p&gt;New year, new blog&lt;/p&gt;</summary><content type="html">&lt;p&gt;Well, it's 2018 and it's been two years since I last made an update to my blog.
I originally published it to test out &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; and to put
something basic on my personal domain. I was working with Ruby on Rails at the time
and Jekyll seemed the natural choice. &lt;/p&gt;
&lt;p&gt;In the intervening time, my work has shifted and we are more and more aligning on
standardizing our entire stack to be Python based (the advantages of which, I will
expound upon in another post). With that has come a desire to teach more of my
colleagues (particularly those not directly involved in programming) to take
advantage of Python in their work. Data analysts can leverage it for data science
and predictive analytics work and back-office folks like our accountants and financial
analysts can leverage it for task automation. &lt;/p&gt;
&lt;p&gt;I've also been getting requests from some friends and family to teach them a bit of
programming and Python seems like a natural choice for beginners. With that in mind,
I've made it my New Year's resolution to teach as many people as possible this year 
to program.&lt;/p&gt;
&lt;p&gt;I'm rebooting my blog to post helpful resources and connect with folks interested in 
learning and that means giving my site a much needed boost of new energy. I've rebuilt
it from the ground up in &lt;a href="http://docs.getpelican.com/en/stable/"&gt;Pelican&lt;/a&gt; so that it'll
be in Python as well.&lt;/p&gt;
&lt;p&gt;Here's to 2018, the year of Python!&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>How Memes Inform My Work</title><link href="http://dchess.github.io/how-memes-inform-my-work.html" rel="alternate"></link><published>2018-01-21T14:11:00-08:00</published><updated>2018-01-21T14:11:00-08:00</updated><author><name>dc.hess@gmail.com</name></author><id>tag:dchess.github.io,2018-01-21:/how-memes-inform-my-work.html</id><summary type="html">&lt;p&gt;Certain memes stick with us and can even affect our philosophies about work&lt;/p&gt;</summary><content type="html">&lt;p&gt;I remember fondly how excited I was the first time I understood an obscure coding joke
on &lt;a href="https://www.reddit.com/r/ProgrammerHumor/"&gt;r/programmerhumor&lt;/a&gt;. It felt like finally
being in "the club" and not feeling like such an outsider. &lt;/p&gt;
&lt;p&gt;While I've been programming in some capacity or another for over 20 years, I didn't get
here through the regular channels. I didn't get a degree in Computer Science. I've never
worked at a startup or one of the Big 4 (or is it &lt;a href="https://www.nytimes.com/2016/01/21/technology/techs-frightful-5-will-dominate-digital-life-for-foreseeable-future.html"&gt;Frightful 5&lt;/a&gt; now?). And as a result, I (like
many programmers) often succumb to bouts of &lt;a href="https://en.wikipedia.org/wiki/Impostor_syndrome"&gt;Imposter Syndrome&lt;/a&gt;. 
So finally feeling like I was part of the in-crowd was a victory in and of itself back then.&lt;/p&gt;
&lt;p&gt;Part of that victory is not only understanding those in-jokes and memes, but also
internalizing many of the lessons they have to teach. I've definitely purloined many a
meme, joke, or comic along the way and made it my own. &lt;/p&gt;
&lt;p&gt;&lt;img alt="I made this meme" src="http://i2.kym-cdn.com/photos/images/newsfeed/001/079/173/ed2.png"&gt;&lt;/p&gt;
&lt;p&gt;Ok. Not like that. I don't mean, I've claimed ownership in the conventional sense, 
but I mean I have taken quite a few to heart in ways that make them a part of who 
I am professionally and philosophically.&lt;/p&gt;
&lt;p&gt;What follows is my attempt to call out some of those that have impacted me the most, 
as well as explain why so many of these are pinned to the walls of my cubicle. &lt;/p&gt;
&lt;h1&gt;Pick Two&lt;/h1&gt;
&lt;p&gt;&lt;img alt="Pick Two Triangle" src="https://livehumancam.files.wordpress.com/2015/05/original.png"&gt;&lt;/p&gt;
&lt;p&gt;This is probably one of the first memes I actually felt spoke to me and my frustrations
with the limitations of project work in the software world. I remember just going, "Yeah. That."
And then feeling a deep need to print it out, stick it to the wall of my cubicle for reference
the next time somebody asked for the impossible. Also known as all three.&lt;/p&gt;
&lt;p&gt;All too often, we as developers, are asked to build quality products while still meeting deadlines
and budgets with limited resources. Because so much of what we do is invisible to stakeholders
and end-users, it is often hand-waved away as "magic" while somehow also simultaneously being 
dismissed as the type of work you can just hand off to the interchangable cogs. And if they can't
meet the feature requests then it's likely just their competency that's at issue.&lt;/p&gt;
&lt;p&gt;We've all been spoiled by the free high-tech apps we consume on a daily basis and assume similar
quality can be built by tiny teams. I am often comforted in those moments by the fundamental
laws of production this meme espouses.&lt;/p&gt;
&lt;h1&gt;The Two States of Every Programmer&lt;/h1&gt;
&lt;p&gt;&lt;img alt="The Two States of Every Programmer" src="https://pbs.twimg.com/media/BzmDP_yCEAAvXdx.png"&gt;&lt;/p&gt;
&lt;p&gt;While we're on the topic of imposter syndrome and our own limitations, this meme is one
I identify with all the time. It doesn't matter how good you get at programming. The field
of what we know and what is possible is constantly shifting and growing. And there isn't a 
day that goes by while debugging something or trying to get a new feature implemented that
I don't find myself osciallating between these states.&lt;/p&gt;
&lt;p&gt;It's important to remember we all feel this way and to remind ourselves of the opposite state
when we're stuck in the other. &lt;/p&gt;
&lt;p&gt;I think what truly separates those that drown in the imposter syndrome river and those that
keep paddling on is a healthy level of the &lt;a href="https://www.mindsetworks.com/science/"&gt;growth mindset&lt;/a&gt;.
I'm not afraid of failure and feeling like that confused dog, if every now and then I crack some 
puzzling code and feel lke a damn genius. That dopamine rush, however temporary or illusory, 
is a bit of an addiction. One I am more than happy to indulge at the cost of a little 
ego-death now and then.&lt;/p&gt;
&lt;h1&gt;Is it Worth the Time?&lt;/h1&gt;
&lt;p&gt;&lt;img alt="XKCD &amp;quot;Is it Worth the Time?&amp;quot;" src="https://imgs.xkcd.com/comics/is_it_worth_the_time.png"&gt;&lt;/p&gt;
&lt;p&gt;There are plenty of XKCD comics with jokes and references that fly right over my head,
but this one not only speaks to me, it is damn well a guidepost in my work. This one
is likewise hanging above my desk as a constant reminder and reference.&lt;/p&gt;
&lt;p&gt;I spend a lot of time automating tasks. My own, my teams, and more often than not, those
of other departments in the org. The automation of boring stuff is one of the most
powerful impacts of code and one that I think gets at the heart of why we do what we do.&lt;/p&gt;
&lt;p&gt;That being said, it's incredibly easy to fall down your own rabbit hole trying to build
the perfect solution in search of time savings. At the start of every new project request,
I consult this chart and think deeply about the time being invested in the solution versus
the time it's actually saving. Return on investment is an important concept to grasp early
on as a developer, because we're inquisitive types who are more than willing to live in 
that damn rabbit hole if it means catching a white rabbit. Even if he is just a figment of
our imagination.&lt;/p&gt;
&lt;h1&gt;You Don't Have to Solve Everything Today&lt;/h1&gt;
&lt;p&gt;&lt;img alt="You don't have to solve everything today" src="https://i.imgur.com/jbcq2d8.png"&gt;&lt;/p&gt;
&lt;p&gt;I'm pretty sure this meme's original context was in regards to depression, but one that
nonetheless serves as a daily reminder to walk away sometimes. It's easy to get so wrapped
up in a problem to completely lose track of time. I can be hacking away while the office 
slowly clears out. It's easy to think "I'll go home once I solve this problem, or make 
this commit" but that can spiral out of control fast. &lt;/p&gt;
&lt;p&gt;The older I get and the more my priorities focus on family and sustaining a healthy work/life
balance, the more I look to this meme as a reminder that it really can "wait until tomorrow".&lt;/p&gt;
&lt;p&gt;Remember, burn out is real and no one says on their death bed that they wish they had worked
more. In the work/life balance equation, you've got to work to live not live to work. i&lt;/p&gt;
&lt;p&gt;It's corny. I know. But that doesn't make it any less true.&lt;/p&gt;
&lt;h1&gt;Exploits of a Mom (AKA Little Bobby Tables)&lt;/h1&gt;
&lt;p&gt;&lt;img alt="XKCD &amp;quot;Exploits of a Mom&amp;quot;" src="https://imgs.xkcd.com/comics/exploits_of_a_mom.png"&gt;&lt;/p&gt;
&lt;p&gt;I started my professional career as a programmer largely working with SQL. And it's still a
daily part of my workload. Security has been everyone's minds in the last few years with all
the data breaches and hacks. Education is not immune either, and this comic about 
&lt;a href="https://en.wikipedia.org/wiki/SQL_injection"&gt;SQL injection&lt;/a&gt; is a good reminder that it's 
important to tighten up those holes in your apps lest someone exploit them for fun or profit!&lt;/p&gt;
&lt;p&gt;Even in 2017, SQL injection was still the number one risk in the &lt;a href="https://www.owasp.org/images/7/72/OWASP_Top_10-2017_%28en%29.pdf.pdf"&gt;OWASP Top Ten Most Critical Web
Application Security Risks&lt;/a&gt;. &lt;/p&gt;
&lt;h1&gt;Office Space Lumberg&lt;/h1&gt;
&lt;p&gt;&lt;img alt="Lumberg That Would be Great" src="http://s2.quickmeme.com/img/67/67851be4d08f9a4ffb3f0a48ef6e136eacae8e0fc0d0f7dfb9a53c36f388b097.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I don't think I truly appreciated the brilliance of Mike Judge's &lt;em&gt;Office Space&lt;/em&gt; until I started to
work in an office job. Although, even as a teacher I identified with beating the crap out of a 
copier/fax machine. I laughed at all the jokes and obvious exaggerations, but now I find myself
trying to figure out which of the characters I am and which ones I never want to be.&lt;/p&gt;
&lt;p&gt;This is particularly true now that I've moved into a role as a manager. Lumberg is the quintessential
terrible boss and every time I find myself leaning on one of my teammate's cubicles with coffee cup in
hand, I can't help feeling like I might accidentally utter, "Yeah if you could just... that'd be great."&lt;/p&gt;
&lt;p&gt;Don't be that guy. Don't be that guy. Don't be that guy.&lt;/p&gt;
&lt;p&gt;I joke about it practically every time, but I really have internalized the idea that being someone's boss
isn't about assigning them work and cracking the whip. That never helped me as an employee and I would
never want to be that to someone else. &lt;/p&gt;
&lt;p&gt;I'm still trying to find my way as I transition into this role, but so far, I'm finding that leading
from the front is much more effective than shouting orders from the back. "Come with me" is so much more
potent than "Go that way".&lt;/p&gt;
&lt;p&gt;What memes have you taken to heart in your work or personal life? Which comics or jokes
do you comfort yourself with in your moments of desparation or exhilaration?&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Student Email Sync</title><link href="http://dchess.github.io/student-email-sync.html" rel="alternate"></link><published>2016-05-31T17:17:00-07:00</published><updated>2016-05-31T17:17:00-07:00</updated><author><name>dc.hess@gmail.com</name></author><id>tag:dchess.github.io,2016-05-31:/student-email-sync.html</id><summary type="html">&lt;p&gt;Ruby script to sync student emails between data warehouse and Powerschool nightly.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="PowerSchool" src="/images/powerschool.png"&gt;&lt;/p&gt;
&lt;h2&gt;Project Summary:&lt;/h2&gt;
&lt;h3&gt;Business Objective:&lt;/h3&gt;
&lt;p&gt;To pull automatically generated student email addresses from our MS SQL data warehouse and push into production PowerSchool instances in multiple states.&lt;/p&gt;
&lt;h3&gt;What I Built:&lt;/h3&gt;
&lt;p&gt;A ruby script that connects to our data warehouse using an ActiveRecord adapter for SQL server, dynamically queries student records, and converts them into the expected format with a custom JSON serializer. Then it uses Faraday HTTP client to make a  call to the PowerSchool API (one per instance in CA and TN) to request a token for authentication. Once authenticated, it sends the JSON request body to the API and returns a response set of success/error messages which are logged locally. The program is integrated into our SSIS integration job server using a nice little PowerShell script to dynamically call the ruby script for each state's data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Wrote a ruby script that syncs 15,000+ student emails between a data warehouse and production PowerSchool servers in mutliple states on a daily basis. &lt;/p&gt;
&lt;h3&gt;Made With:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lostisland/faraday"&gt;Faraday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rails-sqlserver/activerecord-sqlserver-adapter"&gt;Rails-sqlserver adapter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/logger/rdoc/Logger.html"&gt;Logger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://powersource.pearsonschoolsystems.com/developer/"&gt;PowerSchool API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MS SQL&lt;ul&gt;
&lt;li&gt;Stored procedure&lt;/li&gt;
&lt;li&gt;Custom views&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PowerShell&lt;/li&gt;
&lt;li&gt;SSIS&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Code Samples:&lt;/h3&gt;
&lt;p&gt;Select methods from the API class demonstrating how the program connects to the PowerSchool
API and updates student emails.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# @oauth is a class variable that stores the configuration file secrets&lt;/span&gt;
&lt;span class="c1"&gt;# not exposed here for obvious reasons&lt;/span&gt;

&lt;span class="kp"&gt;private&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;connect&lt;/span&gt;
    &lt;span class="c1"&gt;# open HTTP connection&lt;/span&gt;
    &lt;span class="no"&gt;Faraday&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:url&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="vi"&gt;@oauth&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;:ssl&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:verify&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;faraday&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;faraday&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;  &lt;span class="ss"&gt;:url_encoded&lt;/span&gt;               &lt;span class="c1"&gt;# form-encode POST params&lt;/span&gt;
      &lt;span class="n"&gt;faraday&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;adapter&lt;/span&gt;  &lt;span class="no"&gt;Faraday&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;default_adapter&lt;/span&gt;    &lt;span class="c1"&gt;# make requests with Net::HTTP&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="kp"&gt;private&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;access_token&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/oauth/access_token&amp;quot;&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;client_id&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@oauth&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;client_secret&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@oauth&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;secret&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;grant_type&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;client_credentials&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# return token from JSON result&lt;/span&gt;
    &lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;access_token&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="kp"&gt;public&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_student_emails&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# takes JSON as the body param&lt;/span&gt;
    &lt;span class="c1"&gt;# POST request body of student emails to PowerSchool API&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/ws/v1/student&amp;quot;&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt; &lt;span class="c1"&gt;# open/read timeout in seconds&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="c1"&gt;# connection open timeout in seconds&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Accept&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Bearer &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
      &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# Return human readable JSON result&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pretty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pretty_generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ruby method for seralizing student emails from SQL to JSON. 
The PowerSchool Student API expects JSON in a non standard JSON format. That is why custom serialization is needed.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://support.powerschool.com/developer/#/page/student-resources"&gt;PowerSchool API Documentation&lt;/a&gt; under "Update Students &amp;gt; Request Body Example"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;serialize_student_emails&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;# client_uid is the PowerSchool ID and id is the DCID&lt;/span&gt;
  &lt;span class="n"&gt;studentArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;
  &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;production&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sanitize_sql_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SELECT * FROM dbo.StudentEmails WHERE State = ?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;studentArray&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;client_uid&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;client_uid&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="s1"&gt;&amp;#39;action&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;UPDATE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="s1"&gt;&amp;#39;contact_info&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;studentHash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;students&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;student&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;studentArray&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;

  &lt;span class="c1"&gt;# return as JSON body&lt;/span&gt;
  &lt;span class="n"&gt;studentHash&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_json&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;PowerShell script: &lt;code&gt;ssms_job.ps1&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# This is run from an SSMS job task step&lt;/span&gt;
&lt;span class="nv"&gt;$erroractionpreference&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Stop&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Set-Location&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:\powerSchoolApi\app&amp;#39;&lt;/span&gt;

  &lt;span class="c"&gt;# Ruby executable location called from Rails Installer&lt;/span&gt;
  &lt;span class="nv"&gt;$RUBY&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:\RailsInstaller\Ruby2.2.0\bin\ruby.exe&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$RUBY&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;application.rb&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The application encountered an error. See logs for further explanation.&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Projects"></category></entry></feed>